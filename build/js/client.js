(function e(t, n, r) {
	function s(o, u) {
		if (!n[o]) {
			if (!t[o]) {
				var a = typeof require == "function" && require;
				if (!u && a) return a(o, !0);
				if (i) return i(o, !0);
				var f = new Error("Cannot find module '" + o + "'");
				throw f.code = "MODULE_NOT_FOUND", f
			}
			var l = n[o] = {
				exports: {}
			};
			t[o][0].call(l.exports, function (e) {
				var n = t[o][1][e];
				return s(n ? n : e)
			}, l, l.exports, e, t, n, r)
		}
		return n[o].exports
	}
	var i = typeof require == "function" && require;
	for (var o = 0; o < r.length; o++) s(r[o]);
	return s
})({
	1: [function (require, module, exports) {
		(function (global) {
			// Generated by CoffeeScript 1.9.3
			(function () {
				var $, foundation;

				console.log("Hello");

				$ = require('jquery');

				global.jQuery = $;

				foundation = require('foundation');

				$(document).foundation();

				$.fn.countdown = function (options) {
					var countdown_proc, interval, settings, thisEl;
					thisEl = $(this);
					settings = {
						'date': null,
						'format': null
					};
					if (options) {
						$.extend(settings, options);
					}
					countdown_proc = function () {
						var currentDate, days, eventDate, hours, minutes, seconds;
						eventDate = Date.parse(settings['date']) / 1000;
						currentDate = Math.floor($.now() / 1000);
						if (eventDate <= currentDate) {
							callback.call(this);
							clearInterval(interval);
						}
						seconds = eventDate - currentDate;
						days = Math.floor(seconds / (60 * 60 * 24));
						seconds -= days * 60 * 60 * 24;
						hours = Math.floor(seconds / (60 * 60));
						seconds -= hours * 60 * 60;
						minutes = Math.floor(seconds / 60);
						seconds -= minutes * 60;
						if (days === 1) {
							thisEl.find('.timeRefDays').text('День');
						} else {
							thisEl.find('.timeRefDays').text('Дней');
						}
						if (hours === 1) {
							thisEl.find('.timeRefHours').text('Час');
						} else {
							thisEl.find('.timeRefHours').text('Часов');
						}
						if (minutes === 1) {
							thisEl.find('.timeRefMinutes').text('Минута');
						} else {
							thisEl.find('.timeRefMinutes').text('Минут');
						}
						if (seconds === 1) {
							thisEl.find('.timeRefSeconds').text('Секунда');
						} else {
							thisEl.find('.timeRefSeconds').text('Секунд');
						}
						if (settings['format'] === 'on') {
							days = String(days).length >= 2 ? days : '0' + days;
							hours = String(hours).length >= 2 ? hours : '0' + hours;
							minutes = String(minutes).length >= 2 ? minutes : '0' + minutes;
							seconds = String(seconds).length >= 2 ? seconds : '0' + seconds;
						}
						if (!isNaN(eventDate)) {
							thisEl.find('.days').text(days);
							thisEl.find('.hours').text(hours);
							thisEl.find('.minutes').text(minutes);
							thisEl.find('.seconds').text(seconds);
						} else {
							alert('Invalid date. Here\'s an example: 12 Tuesday 2012 17:30:00');
							clearInterval(interval);
						}
					};
					countdown_proc();
					interval = setInterval(countdown_proc, 1000);
				};

				$('.countdown').countdown({
					date: '2 september 2015 6:19:00',
					format: 'on'
				});

			}).call(this);



		}).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
}, {
		"foundation": "foundation",
		"jquery": "jquery"
	}]
}, {}, [1]);
